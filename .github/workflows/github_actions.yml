name: DevSecOps Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  devsecops-pipeline:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the code
      uses: actions/checkout@v2

    - name: Set execute permissions for scripts
      run: chmod +x scripts/*.sh 

    - name: Install SonarQube Scanner
      run: |
        sudo apt-get update && sudo apt-get install -y unzip
        wget -qO sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
        unzip sonar-scanner.zip -d /opt/sonar-scanner
        echo "/opt/sonar-scanner/sonar-scanner-4.7.0.2747-linux/bin" >> $GITHUB_PATH
    
    - name: Install OWASP ZAP
      run: |
          sudo apt-get update && sudo apt-get install -y wget jq
          ZAP_URL=$(curl -s https://api.github.com/repos/zaproxy/zaproxy/releases/latest | jq -r '.assets[] | select(.name | endswith("Linux.tar.gz")) | .browser_download_url')
          wget -qO zap.tar.gz "$ZAP_URL"
          if [ ! -s zap.tar.gz ]; then echo "Download failed!"; exit 1; fi
          mkdir -p /opt/zaproxy
          tar -xvzf zap.tar.gz -C /opt/zaproxy --strip-components=1 || exit 1
          echo "/opt/zaproxy" >> $GITHUB_PATH
       
    - name: Install Semgrep
      run: pip install --no-cache-dir --upgrade semgrep
        

    - name: Install Trivy
      run: |
        sudo apt-get update && sudo apt-get install -y wget jq
        wget -qO - https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo bash
    

    - name: Install OWASP Dependency-Check
      run: |
          wget -qO dependency-check.zip https://github.com/jeremylong/DependencyCheck/releases/latest/download/dependency-check.zip
          if [ ! -s dependency-check.zip ]; then echo "Download failed!"; exit 1; fi
          unzip -o dependency-check.zip -d /opt/dependency-check
          echo "/opt/dependency-check/bin" >> $GITHUB_PATH
      
    - name: Run SCA (Static Code Analysis) with OWASP Dependency-Check
      run: dependency-check --scan ./ --format HTML --out reports/dependency-check-report.html

    - name: Run SAST (Static Application Security Testing)
      run: ./scripts/sast_scan.sh

    - name: Run DAST (Dynamic Application Security Testing)
      run: ./scripts/dast_scan.sh

    - name: Run IAST (Interactive Application Security Testing)
      run: ./scripts/iact_scan.sh

    - name: Evaluate risk based on scan reports
      run: ./scripts/evaluate_risk.sh

    - name: Prioritize vulnerabilities for remediation
      run: ./scripts/prioritize_vulnerabilities.sh

    - name: Improve and optimize code based on identified vulnerabilities
      run: ./scripts/improve_code.sh

    - name: Integrate security into DevSecOps pipeline
      run: ./scripts/integrate_security_devsecops.sh

    - name: Commit the updated code (if any fixes were made)
      run: |
        git config --global user.name "Vu Viet Anh"
        git config --global user.email "vuvietanh201315@gmail.com"
        git add .
        git commit -m "Fix vulnerabilities based on security scans" || echo "No changes to commit"
        git push || echo "No changes to push"

    - name: Monitor and update tools
      run: ./scripts/monitor_update_tools.sh

    - name: Repeat the process
      run: echo "Re-running pipeline after changes"