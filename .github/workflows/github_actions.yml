name: DevSecOps Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  devsecops-pipeline:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the code
      uses: actions/checkout@v2

    - name: Set execute permissions for scripts
      run: chmod +x scripts/*.sh 

    - name: Install OWASP ZAP and zap-cli
      run: |
        sudo apt-get update && sudo apt-get install -y wget jq python3-pip
        ZAP_URL=$(curl -s https://api.github.com/repos/zaproxy/zaproxy/releases/latest | jq -r '.assets[] | select(.name | endswith("Linux.tar.gz")) | .browser_download_url')
        wget -qO zap.tar.gz "$ZAP_URL"
        if [ ! -s zap.tar.gz ]; then echo "Download failed!"; exit 1; fi
        mkdir -p /opt/zaproxy
        tar -xvzf zap.tar.gz -C /opt/zaproxy --strip-components=1 || exit 1
        echo "/opt/zaproxy" >> $GITHUB_PATH
        export PATH="/opt/zaproxy:$PATH"
        pip install --no-cache-dir zapcli

    - name: Install Semgrep
      run: |
        pip install --no-cache-dir --upgrade semgrep
        echo "$(which semgrep)" >> $GITHUB_PATH
        export PATH="$(dirname $(which semgrep)):$PATH"

    - name: Install Trivy
      run: |
        sudo apt-get update && sudo apt-get install -y wget jq
        wget -qO - https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo bash
        sudo mv ./bin/trivy /usr/local/bin/
        echo "/usr/local/bin" >> $GITHUB_PATH
        export PATH="/usr/local/bin:$PATH"

    - name: Install Katana
      run: |
        sudo apt-get update && sudo apt-get install -y golang
        go install github.com/projectdiscovery/katana/cmd/katana@latest
        sudo mv ~/go/bin/katana /usr/local/bin/
        echo "/usr/local/bin" >> $GITHUB_PATH
        export PATH="/usr/local/bin:$PATH"
        katana -version 
  


    - name: Install Gosec
      run: |
        sudo apt-get update && sudo apt-get install -y golang
        go install github.com/securego/gosec/v2/cmd/gosec@latest
        sudo mv ~/go/bin/gosec /usr/local/bin/
        echo "/usr/local/bin" >> $GITHUB_PATH
        export PATH="/usr/local/bin:$PATH"
        gosec -version  
    

    - name: Run SCA (Static Code Analysis)
      run: ./scripts/sca_scan.sh
  
    - name: Run SAST (Static Application Security Testing)
      run: ./scripts/sast_scan.sh

    - name: Start test server
      run: |
        node server.js &
        sleep 10 

    - name: Run DAST (Dynamic Application Security Testing)
      run: ./scripts/dast_scan.sh

    - name: Run IAST (Interactive Application Security Testing)
      run: ./scripts/iast_scan.sh

    - name: Evaluate risk based on scan reports
      run: ./scripts/evaluate_risk.sh

    - name: Prioritize vulnerabilities for remediation
      run: ./scripts/prioritize_vulnerabilities.sh

    - name: Improve and optimize code based on identified vulnerabilities
      run: ./scripts/improve_code.sh

    - name: Integrate security into DevSecOps pipeline
      run: ./scripts/integrate_security_devsecops.sh

    - name: Commit the updated code (if any fixes were made)
      run: |
        git config --global user.name "Vu Viet Anh"
        git config --global user.email "vuvietanh201315@gmail.com"
        git add .
        git commit -m "Fix vulnerabilities based on security scans" || echo "No changes to commit"
        git push || echo "No changes to push"

    - name: Monitor and update tools
      run: ./scripts/monitor_update_tools.sh

    - name: Repeat the process
      run: echo "Re-running pipeline after changes"